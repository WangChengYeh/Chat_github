let r=null;async function c(e){document.querySelector(`script[data-pyodide-src="${e}"]`)||await new Promise((t,d)=>{const o=document.createElement("script");o.src=e,o.async=!0,o.dataset.pyodideSrc=e,o.onload=()=>t(),o.onerror=()=>d(new Error(`Failed to load ${e}`)),document.head.appendChild(o)})}async function s(){return r||(r=(async()=>{const e=window.__PYODIDE_BASE||"https://cdn.jsdelivr.net/npm/pyodide@0.24.1/full";window.loadPyodide||await c(`${e}/pyodide.js`);const t=window.loadPyodide;if(typeof t!="function")throw new Error("Pyodide loader not available after script load");return await t({indexURL:e})})(),r)}async function l(e){const t=await s();let d="",o="";const i=t.stdout_callback,a=t.stderr_callback;t.setStdout(n=>{d+=n}),t.setStderr(n=>{o+=n});try{const n=t.runPython(e);return{stdout:d,stderr:o,result:n}}finally{t.setStdout(i),t.setStderr(a)}}export{s as loadPython,l as runPythonCode};
