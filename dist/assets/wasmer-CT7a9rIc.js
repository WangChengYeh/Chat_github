async function f(i,e="program.c"){var m,l;if(typeof window<"u"&&window.__mockCompileCWithWasmer)return await window.__mockCompileCWithWasmer(i,e);async function a(u){try{return await new Function("m","return import(m)")(u)}catch{return null}}let t=null;if(t=await a("@wasmer/sdk"),!t&&typeof window<"u"&&(t=await a("https://esm.sh/@wasmer/sdk")||await a("https://cdn.skypack.dev/@wasmer/sdk")||await a("https://esm.run/@wasmer/sdk")),!t)throw new Error("Wasmer SDK not available. Check network access; falling back failed.");const{Wasmer:r}=t;await r.init();const n=await r.createFs();await n.writeFile(`/work/${e}`,new TextEncoder().encode(i));const k="wasmer/clang:latest",w=e.replace(/\.c$/i,".wasm"),p=["--target=wasm32-wasi","-O3","-Wl,--export-all","-Wl,--no-entry","-o",`/work/${w}`,`/work/${e}`],c=await r.runPackage(k,{args:p,mount:{"/work":n},env:{}});let d="",s="";try{d=new TextDecoder().decode(await((m=c.stdout)==null?void 0:m.bytes()))}catch{}try{s=new TextDecoder().decode(await((l=c.stderr)==null?void 0:l.bytes()))}catch{}const o=await n.readFile(`/work/${w}`);if(!o||!(o instanceof Uint8Array))throw new Error(`Wasmer compile failed: output file missing. Stderr: ${s}`);return{wasm:o,stdout:d,stderr:s}}export{f as compileCWithWasmer};
